name: Build - macOS

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            target: "macos"
          }
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Upgrade PIP
      run: python -m pip install --upgrade pip setuptools wheel

    - name: Display Python version
      run: python --version

    - name: Display PIP version
      run: pip --version

    - name: Install python dependencies
      run: pip install -r requirements.txt

    - name: Install Application Certificate
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MAC_APPLICATION_CERTIFICATE_P12 }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MAC_APPLICATION_CERTIFICATE_PASSPHRASE }}
      run: |
          echo $MACOS_CERTIFICATE | base64 —decode > certificate.p12
          security create-keychain -p prprojector build.keychain security default-keychain -s build.keychain
          security unlock-keychain -p prprojector build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k prprojector build.keychain

    - name: Install Installer Certificate
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MAC_INSTALLER_CERTIFICATE_P12 }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MAC_INSTALLER_CERTIFICATE_PASSPHRASE }}
      run: |
          echo $MACOS_CERTIFICATE | base64 —decode > certificate.p12
          security create-keychain -p prprojector build.keychain security default-keychain -s build.keychain
          security unlock-keychain -p prprojector build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k prprojector build.keychain

    - name: Build
      run: python make.py run build-${{ matrix.config.target }}

    - name: Save
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: artifact-${{ matrix.config.target }}
        path: build/${{ matrix.config.target }}/pkg/PRProjector-x64-release.pkg

  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: [build]
      if: startsWith(github.ref, 'refs/tags/')
      steps:
        - name: Load
          uses: actions/download-artifact@v2
          with:
            name: artifact-macos
        - name: Get release
          id: get_release
          uses: bruceadams/get-release@v1.2.2
          env:
            GITHUB_TOKEN: ${{ github.token }}
        - name: Upload release asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.get_release.outputs.upload_url }}
            asset_path: PRProjector-x64-release.pkg
            asset_name: PRProjector-x64-release.pkg
            asset_content_type: application/x-newton-compatible-pkg
